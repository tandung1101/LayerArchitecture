// <auto-generated />
using System;
using LayerArchitecture.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LayerArchitecture.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241128030520_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LayerArchitecture.Core.Model.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f9a9c21-4cfa-4b52-8581-c2b8d7e26711"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pencil"
                        },
                        new
                        {
                            Id = new Guid("9b1ec4d7-39f7-493a-bef4-4bcff24da0d3"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Book"
                        },
                        new
                        {
                            Id = new Guid("d2f2c4e6-6a5b-4b78-bcb5-4d56a8e17e9f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Handbook"
                        });
                });

            modelBuilder.Entity("LayerArchitecture.Core.Model.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f9a9c21-4cfa-4b52-1111-c2b8d7e26711"),
                            CategoryId = new Guid("6f9a9c21-4cfa-4b52-8581-c2b8d7e26711"),
                            CreatedDate = new DateTime(2024, 11, 28, 10, 5, 20, 368, DateTimeKind.Local).AddTicks(1352),
                            Name = "Pen 1",
                            Price = 100m,
                            Stock = 20
                        },
                        new
                        {
                            Id = new Guid("6f9a9c21-4cfa-4b52-2222-c2b8d7e26711"),
                            CategoryId = new Guid("6f9a9c21-4cfa-4b52-8581-c2b8d7e26711"),
                            CreatedDate = new DateTime(2024, 11, 28, 10, 5, 20, 368, DateTimeKind.Local).AddTicks(1362),
                            Name = "Pen 2",
                            Price = 200m,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("6f9a9c21-4cfa-4b52-3333-c2b8d7e26711"),
                            CategoryId = new Guid("6f9a9c21-4cfa-4b52-8581-c2b8d7e26711"),
                            CreatedDate = new DateTime(2024, 11, 28, 10, 5, 20, 368, DateTimeKind.Local).AddTicks(1365),
                            Name = "Pen 3",
                            Price = 600m,
                            Stock = 60
                        },
                        new
                        {
                            Id = new Guid("6f9a9c21-4cfa-4b52-4444-c2b8d7e26711"),
                            CategoryId = new Guid("9b1ec4d7-39f7-493a-bef4-4bcff24da0d3"),
                            CreatedDate = new DateTime(2024, 11, 28, 10, 5, 20, 368, DateTimeKind.Local).AddTicks(1367),
                            Name = "Book 1",
                            Price = 600m,
                            Stock = 60
                        },
                        new
                        {
                            Id = new Guid("6f9a9c21-4cfa-4b52-5555-c2b8d7e26711"),
                            CategoryId = new Guid("9b1ec4d7-39f7-493a-bef4-4bcff24da0d3"),
                            CreatedDate = new DateTime(2024, 11, 28, 10, 5, 20, 368, DateTimeKind.Local).AddTicks(1370),
                            Name = "Book 2",
                            Price = 6600m,
                            Stock = 320
                        });
                });

            modelBuilder.Entity("LayerArchitecture.Core.Model.ProductFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = new Guid("401b7c7b-512e-4fff-a9cd-71a707e82e53"),
                            Color = "Red",
                            Height = 100,
                            ProductId = new Guid("6f9a9c21-4cfa-4b52-1111-c2b8d7e26711"),
                            Width = 200
                        },
                        new
                        {
                            Id = new Guid("f264c7ca-91b7-41e1-9286-4a61a1b41e63"),
                            Color = "Blue",
                            Height = 300,
                            ProductId = new Guid("6f9a9c21-4cfa-4b52-2222-c2b8d7e26711"),
                            Width = 200
                        });
                });

            modelBuilder.Entity("LayerArchitecture.Core.Model.Product", b =>
                {
                    b.HasOne("LayerArchitecture.Core.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LayerArchitecture.Core.Model.ProductFeature", b =>
                {
                    b.HasOne("LayerArchitecture.Core.Model.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("LayerArchitecture.Core.Model.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LayerArchitecture.Core.Model.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("LayerArchitecture.Core.Model.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
